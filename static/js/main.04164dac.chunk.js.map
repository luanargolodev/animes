{"version":3,"sources":["SearchInput.js","useDebounce.js","App.js","index.js"],"names":["SearchInput","value","onChange","useState","displayValue","setDisplayValue","debouncedChange","fn","delay","timeoutRef","useRef","args","window","clearTimeout","current","setTimeout","useDebounce","type","event","target","App","info","setInfo","text","setText","useEffect","fetch","then","response","json","className","search","data","map","anime","src","attributes","posterImage","small","alt","canonicalTitle","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAeeA,EAZK,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EACHC,mBAASF,GADN,mBACpCG,EADoC,KACtBC,EADsB,KAErCC,ECHO,SAAqBC,EAAIC,GACtC,IAAMC,EAAaC,iBAAO,MAU1B,OARA,WAA8B,IAAD,uBAANC,EAAM,yBAANA,EAAM,gBAC3BC,OAAOC,aAAaJ,EAAWK,SAE/BL,EAAWK,QAAUF,OAAOG,YAAW,WACrCR,EAAE,WAAF,EAAMI,KACLH,IDLmBQ,CAAYd,EAAU,KAO9C,OAAO,uBAAOe,KAAK,SAAShB,MAAOG,EAAcF,SALjD,SAAsBgB,GACpBb,EAAgBa,EAAMC,OAAOlB,OAC7BK,EAAgBY,EAAMC,OAAOlB,W,MEoClBmB,MAvCf,WAAgB,IAAD,EACWjB,mBAAS,IADpB,mBACNkB,EADM,KACAC,EADA,OAEWnB,mBAAS,IAFpB,mBAENoB,EAFM,KAEAC,EAFA,KAeb,OAXAC,qBAAU,WACJF,IACFD,EAAQ,IACRI,MAAM,GAAD,OATC,6BASD,8BAA6BH,EAA7B,oBACFI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLN,EAAQM,SAGb,CAACL,IAGF,sBAAKO,UAAU,MAAf,UACE,wCACA,cAAC,EAAD,CAAa7B,MAAOsB,EAAMrB,SAAU,SAAC6B,GAAD,OAAYP,EAAQO,MAEvDR,IAASF,EAAKW,MAAQ,iDAEtBX,EAAKW,MACJ,oBAAIF,UAAU,cAAd,SACGT,EAAKW,KAAKC,KAAI,SAACC,GAAD,OACb,+BACE,qBACEC,IAAKD,EAAME,WAAWC,YAAYC,MAClCC,IAAKL,EAAME,WAAWI,iBAEvBN,EAAME,WAAWI,iBALXN,EAAMO,aC1B3BC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.04164dac.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport useDebounce from \"./useDebounce\";\r\n\r\nconst SearchInput = ({ value, onChange }) => {\r\n  const [displayValue, setDisplayValue] = useState(value);\r\n  const debouncedChange = useDebounce(onChange, 500);\r\n\r\n  function handleChange(event) {\r\n    setDisplayValue(event.target.value);\r\n    debouncedChange(event.target.value);\r\n  }\r\n\r\n  return <input type=\"search\" value={displayValue} onChange={handleChange} />;\r\n};\r\n\r\nexport default SearchInput;\r\n","import { useRef } from \"react\";\r\n\r\nexport default function useDebounce(fn, delay) {\r\n  const timeoutRef = useRef(null);\r\n\r\n  function debounceFn(...args) {\r\n    window.clearTimeout(timeoutRef.current);\r\n\r\n    timeoutRef.current = window.setTimeout(() => {\r\n      fn(...args);\r\n    }, delay);\r\n  }\r\n\r\n  return debounceFn;\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport SearchInput from \"./SearchInput\";\nimport \"./App.css\";\n\nconst api = \"https://kitsu.io/api/edge/\";\n\nfunction App() {\n  const [info, setInfo] = useState({});\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    if (text) {\n      setInfo({});\n      fetch(`${api}anime?filter[text]=${text}&page[limit]=12`)\n        .then((response) => response.json())\n        .then((response) => {\n          setInfo(response);\n        });\n    }\n  }, [text]);\n\n  return (\n    <div className=\"App\">\n      <h1>Animes</h1>\n      <SearchInput value={text} onChange={(search) => setText(search)} />\n\n      {text && !info.data && <span>Carregando...</span>}\n\n      {info.data && (\n        <ul className=\"animes-list\">\n          {info.data.map((anime) => (\n            <li key={anime.id}>\n              <img\n                src={anime.attributes.posterImage.small}\n                alt={anime.attributes.canonicalTitle}\n              />\n              {anime.attributes.canonicalTitle}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}